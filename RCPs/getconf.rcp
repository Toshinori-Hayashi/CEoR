#
# Sample Recipe script
#

################################################################################
prepare(){ # Run on local
################################################################################
[ ! -d ${__NODECONF} ] && echo "${__NODECONF} is not Directory. Error exit." && exit 1

[ ! -d ${__WORKS}    ] && rm -rf ${__WORKS}    && mkdir ${__WORKS}
[ ! -d ${__INFOS}    ] && rm -rf ${__INFOS}    && mkdir ${__INFOS}
[ ! -d ${__CONFS}    ] && rm -rf ${__CONFS}    && mkdir ${__CONFS}
[ ! -d ${__PKGS}     ] && rm -rf ${__PKGS}     && mkdir ${__PKGS}
[ ! -d ${__BAKCONFS} ] && rm -rf ${__BAKCONFS} && mkdir ${__BAKCONFS}

# Need to set $?=0
exit 0
}


################################################################################
main(){ # Run on remote
################################################################################
_OS=`checkos -k | tr [:upper:] [:lower:]`
_DIST=`checkos -d | tr [:upper:] [:lower:]`

case "${_OS}" in
  freebsd)
    _TARGET="/etc /usr/local/etc /boot/loader.conf"
    _LSOPT="-lRo"
    _STATOPT="-f"
    _STATFMTOPT="%p %l %Su %u %Sg %g \"%Sf\" %N"
  ;;
  linux)
    case "${_DIST}" in
      centos*)
        _TARGET="/etc"
        _LSOPT="-lR"
        _STATOPT="--format"
        if [ -z "`sudo which restorecon`" ]; then
          _STATFMTOPT="%a %h %U %u %G %g \"\" %n"
        else
          _STATFMTOPT="%a %h %U %u %G %g \"%C\" %n"
        fi
      ;;
      ubuntu)
        _TARGET="/etc"
        _LSOPT="-lR"
        _STATOPT="--format"
        if [ -z "`sudo which restorecon`" ]; then
          _STATFMTOPT="%a %h %U %u %G %g \"\" %n"
        else
          _STATFMTOPT="%a %h %U %u %G %g \"%C\" %n"
        fi
      ;;
    esac
  ;;
  *)
    echo "Not Supported Platform" >&2
    exit 1
  ;;
esac

_TMP_CURDIR=${PWD}
for i in ${_TARGET}; do
  sudo ls ${_LSOPT} ${i} >> ${__TGT_SCRDIR}/ls-lR.txt
  (cd /; sudo find ${i#/} -type f -exec stat ${_STATOPT} "${_STATFMTOPT}" {} \; ) >> ${__TGT_SCRDIR}/stat.txt
  (cd /; sudo find ${i#/} -type f | sudo tar rf ${_TMP_CURDIR}/${__TGT_SCRDIR}/archive.tar -T - )
done
echo "OS=\"${_OS}\""     >> ${__TGT_SCRDIR}/OS-DIST.txt
echo "DIST=\"${_DIST}\"" >> ${__TGT_SCRDIR}/OS-DIST.txt
sudo gzip -9 ${__TGT_SCRDIR}/archive.tar
}

################################################################################
afterwords(){ # Run on local
################################################################################
scp ${__SSH_OPT} -q -rp ${__RUSR}${__TGT}:${__TGT_SCRDIR}/"*" ${__WORKS}

# backup old configurations
[ -e ${__BAKCONFS}/${__TGT} ] && rm -rf ${__BAKCONFS}/${__TGT}
[ -d ${__CONFS}/${__TGT}    ] && mv ${__CONFS}/${__TGT} ${__BAKCONFS}/ && touch ${__BAKCONFS}/${__TGT}
mkdir ${__CONFS}/${__TGT}
[ -d ${__INFOS}/${__TGT} ] && rm -rf ${__INFOS}/${__TGT}
mkdir ${__INFOS}/${__TGT}
rm -rf ${__PKGS}/*/${__TGT}

# Extract configuration archives
tar xzf ${__WORKS}/archive.tar.gz -C ${__CONFS}/${__TGT}
rm ${__WORKS}/archive.tar.gz
mv ${__WORKS}/ls-lR.txt ${__INFOS}/${__TGT}
mv ${__WORKS}/stat.txt ${__INFOS}/${__TGT}
mv ${__WORKS}/OS-DIST.txt ${__INFOS}/${__TGT}

# Source OS Information
. ${__INFOS}/${__TGT}/OS-DIST.txt

### for each packages.
case "${OS}" in
  freebsd)
    _FROMDIR="${__CONFS}/${__TGT}/usr/local/etc"
    # etc
    [ ! -e ${__PKGS}/etc ] && mkdir ${__PKGS}/etc
    ln -s ${__CONFS}/${__TGT}/etc ${__PKGS}/etc/${__TGT}
    # pkg
    if [ -e ${_FROMDIR}/pkg.conf ]; then
      mkdir -p ${__PKGS}/pkg/${__TGT}
      ln -s ${_FROMDIR}/pkg* ${__PKGS}/pkg/${__TGT}
    fi
    for i in newsyslog periodic; do
      mkdir -p ${__PKGS}/${i}/${__TGT}/etc
      mkdir -p ${__PKGS}/${i}/${__TGT}/localetc
      ln -s ${__CONFS}/${__TGT}/etc/${i}* ${__PKGS}/${i}/${__TGT}/etc
      ln -s ${__CONFS}/${__TGT}/usr/local/etc/${i}* ${__PKGS}/${i}/${__TGT}/localetc
    done
  ;;
  linux)
    case "${DIST}" in
    centos*)
      _FROMDIR="${__CONFS}/${__TGT}/etc"
      # etc
      [ ! -e ${__PKGS}/etc ] && mkdir ${__PKGS}/etc
      ln -s ${__CONFS}/${__TGT}/etc ${__PKGS}/etc/${__TGT}
    ;;
    ubuntu)
      _FROMDIR="${__CONFS}/${__TGT}/etc"
      # etc
      [ ! -e ${__PKGS}/etc ] && mkdir ${__PKGS}/etc
      ln -s ${__CONFS}/${__TGT}/etc ${__PKGS}/etc/${__TGT}
    ;;
    esac
  ;;
  *)
  ;;
esac

# Packages
for i in nginx postfix dovecot openldap; do
  if [ -e ${_FROMDIR}/${i} ]; then
    [ ! -e ${__PKGS}/${i} ] && mkdir ${__PKGS}/${i}
    ln -s ${_FROMDIR}/${i} ${__PKGS}/${i}/${__TGT}
  fi
done

# sudo
if [ -e ${_FROMDIR}/sudores ]; then
  mkdir -p ${__PKGS}/sudo/${__TGT}
  ln -s ${_FROMDIR}/sudo* ${__PKGS}/sudo/${__TGT}
fi

# chrony
if [ -e ${_FROMDIR}/chrony.conf ]; then
  mkdir -p ${__PKGS}/chrony/${__TGT}
  ln -s ${_FROMDIR}/chrony* ${__PKGS}/chrony/${__TGT}
fi

##### Postamble ##############################################################
# Remove All Symbolic Links
find ${__CONFS}/${__TGT} -type l -exec rm -- {} \;

# for OS Special
case "${OS}" in
  freebsd)
  ;;
  linux)
    case "${DIST}" in
      centos*)
        chmod 600 ${__CONFS}/${__TGT}/etc/shadow
        chmod 600 ${__CONFS}/${__TGT}/etc/shadow-
        chmod 600 ${__CONFS}/${__TGT}/etc/gshadow
        chmod 600 ${__CONFS}/${__TGT}/etc/gshadow-
      ;;
      ubuntu)
      ;;
    esac
  ;;
  *)
    echo "Not Supported Platform" >&2
    exit 1
  ;;
esac
}

##############################################################################
# getconf.rcp
#   Usage: /bin/sh ceor.sh -u USER -h TARGET_NODE getconf.rcp
#
# getconf.rcp is recipe for ceor script.
# This script use Environmental value of followings.
#   __NODECONF  # Root node
#   __WORKS     # Working Directory
#   __INFOS     # Target node information data
#   __CONFS     # Target node configuration files
#   __BAKCONFS  # Node configuration backup files
#   __PKGS      # Target package configuration files (symlink)
#
# getconf.rcp gets TARGET_NODE's configuration file and place __NODECONF/...
